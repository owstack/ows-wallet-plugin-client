"use strict";var modules=["gettext","ngLodash","owsWalletPluginClient.api","owsWalletPluginClient.impl"],owsWalletPluginClient=angular.module("owsWalletPluginClient",modules);angular.module("owsWalletPluginClient.api",[]),angular.module("owsWalletPluginClient.impl",[]),angular.module("owsWalletPluginClient").run(function(CSession){CSession.getInstance()}),angular.module("owsWalletPluginClient").run(["gettextCatalog",function(gettextCatalog){}]),angular.module("owsWalletPluginClient.impl").factory("ApiMessage",function($rootScope,$log,lodash,$injector,$timeout,CError){function ApiMessage(eventOrRequest){if(this.event={},eventOrRequest instanceof MessageEvent){var event=eventOrRequest;this.event=event,function(){if(lodash.isUndefined(this.event.data))throw this.response={statusCode:500,statusText:"Invalid message event, no 'data' found.",data:{}},new Error;if(!lodash.isString(this.event.data))throw this.response={statusCode:500,statusText:"Invalid message event data, expected string argument but received object.",data:{}},new Error}();var data=JSON.parse(this.event.data);lodash.assign(this,data)}else{var request=eventOrRequest,now=new Date;this.header={sequence:sequence++,id:""+now.getTime(),timestamp:now},this.request=request||{},this.response={}}return this}function receiveMessage(event){var message;try{message=new ApiMessage(event);var promiseIndex=lodash.findIndex(promises,function(promise){return promise.id==message.header.id});if(promiseIndex>=0){var promise=lodash.pullAt(promises,promiseIndex);$timeout.cancel(promise[0].timer),promise[0].onComplete(message)}else $log.warn("[client] WARNING: Message received but there is no promise to fulfill: "+serialize(message))}catch(ex){$log.error("[client] ERROR: invalid message received, "+ex.message+" - "+angular.toJson(event))}}function timeout(message){$log.debug("Plugin client request timeout: "+message);var promiseIndex=lodash.findIndex(promises,function(promise){return promise.id==message.header.id});if(promiseIndex>=0){var promise=lodash.pullAt(promises,promiseIndex);message.response={statusCode:408,statusText:"Request timed out.",data:{}},promise[0].onComplete(message)}else $log.warn("[client] WARNING: Message request timed out but there is no promise to fulfill: "+serialize(message))}function isStartMessage(message){return message.request.url==START_URL}function messageServiceIsOK(){return state.statusCode>=200&&state.statusCode<=299}function serialize(message){return angular.toJson(transport(message))}function transport(message){return{header:message.header,request:message.request,response:message.response}}var host=window.parent,REQUEST_TIMEOUT=3e3,START_URL="/start",state={statusCode:-1,statusText:""},sequence=0,promises=[];return window.addEventListener("message",receiveMessage.bind(this)),$rootScope.$on("$pre.start",function(event,stateObj){state=stateObj}),ApiMessage.prototype.send=function(){var self=this;return new Promise(function(resolve,reject){var onComplete=function(message){var responseObj;message.response.statusCode>=200&&message.response.statusCode<=299?(lodash.isUndefined(message.request.responseObj)?responseObj=message.response:lodash.isEmpty(message.request.responseObj)?responseObj=message.response.data||{}:(responseObj=$injector.get(message.request.responseObj),responseObj=eval(new responseObj(message.response.data))),resolve(responseObj)):reject(new CError(message))};if(messageServiceIsOK()||isStartMessage(self)){var timeoutTimer=$timeout(function(){timeout(self)},REQUEST_TIMEOUT);promises.push({id:self.header.id,onComplete:onComplete,timer:timeoutTimer}),$log.info("[client] REQUEST  "+self.header.sequence+": "+angular.toJson(transport(self))),host.postMessage(angular.toJson(transport(self)),"*")}else self.response={statusCode:503,statusText:"Client service not ready.",data:{}},onComplete(self)})},ApiMessage}),angular.module("owsWalletPluginClient.api").factory("CApplet",function(lodash){function CApplet(appletObj){return lodash.assign(this,appletObj),this}return CApplet.prototype.initService=function(pluginId){var request={method:"POST",url:"/applet/"+this.header.id+"/service/"+pluginId+"/init",data:{}};return new ApiMessage(request).send()},CApplet.prototype.hideSplash=function(){var request={method:"POST",url:"/applet/"+this.header.id+"/config",data:{showSplash:!1}};return new ApiMessage(request).send()},CApplet.prototype.property=function(name,value){var request={method:"POST",url:"/applet/"+this.header.id+"/property/"+name,data:value};return new ApiMessage(request).send()},CApplet.prototype.propertySet=function(set){var request={method:"POST",url:"/applet/"+this.header.id+"/propertyset",data:set};return new ApiMessage(request).send()},CApplet}),angular.module("owsWalletPluginClient.api").factory("CBitPayInvoicePaymentService",function($log){function CBitPayInvoicePaymentService(serviceDesc){}return CBitPayInvoicePaymentService.prototype=new AbstractPaymentService,CBitPayInvoicePaymentService.prototype.getPaymentRequest=function(){return self.paymentRequest},CBitPayInvoicePaymentService.prototype.createPaymentRequest=function(data,callback){var postData={token:self.api.auth.token,guid:self.guid(),price:data.price,currency:data.currency,orderId:data.orderId,itemDesc:data.itemDesc,itemCode:data.itemCode,posData:data.posData,physical:data.physical,buyer:{name:data.name,address1:data.address1,address2:data.address2,locality:data.locality,region:data.region,postalCode:data.postalCode,country:data.country,email:data.email,phone:data.phone,notify:data.notify},transactionSpeed:self.api.transactionSpeed,notificationEmail:self.api.notificationEmail,notificationURL:self.api.notificationURL};return $rootScope.$emit("Local/PaymentServiceStatus",gettext("Fetching payment instructions")),self.post("/invoices",postData,function(err,response){if($rootScope.$emit("Local/PaymentServiceStatus"),err)return callback(err);$log.debug("Invoice created: "+JSON.stringify(response.data)),self.paymentRequest=response.data,callback()}),self},CBitPayInvoicePaymentService.prototype.sendPayment=function(memo,callback){$rootScope.$emit("Local/PaymentServiceStatus",gettext("Sending payment")),AbstractPaymentService.sendPayment({payProUrl:self.paymentRequest.data.paymentUrls.BIP73,memo:memo},function(err){$rootScope.$emit("Local/PaymentServiceStatus"),callback(err)})},CBitPayInvoicePaymentService.prototype.createAndSendPayment=function(data,memo,callback){self.createPaymentRequest(data,function(err,response){if(err)return callback(err);self.sendPayment(memo,function(err){return callback(err)})})},CBitPayInvoicePaymentService}),angular.module("owsWalletPluginClient.api").factory("CConst",function(){function CConst(){throw new Error("CConst is a static class")}return CConst.BITS_PER_BTC=1e6,CConst.SATOSHI_PER_BTC=1e8,CConst}),angular.module("owsWalletPluginClient.api").factory("CError",function(lodash){function CError(message){return lodash.assign(this,message),this.statusCode=this.response.statusCode,this.message=this.response.statusText,this}return CError}),angular.module("owsWalletPluginClient.api").factory("CPlatform",function(lodash){function CPlatform(){throw new Error("CPlatform is a static class")}return function(){var request={method:"GET",url:"/info/platorm",responseObj:{}};new ApiMessage(request).send().then(function(info){lodash.assign(CPlatform,info)})}(),CPlatform}),angular.module("owsWalletPluginClient.api").factory("CPlugin",function($log,ApiMessage){function CPlugin(){throw new Error("CPlugin is a static class")}return CPlugin.getCatalogEntry=function(id){return new ApiMessage({method:"GET",url:"/plugin-catalog?id="+id,responseObj:{}}).send()},CPlugin.validateServiceDesc=function(serviceDesc,requiredProperties,id){var result=CSystem.checkObject(serviceDesc,requiredProperties);if(result.missing.length>0)throw new Error("A skin with service plugin '"+pluginId+"' is missing required properties '"+result.missing.toString()+"'");result.other.length>0&&$log.warn("A skin with service plugin '"+pluginId+"' has unrecognized properties '"+result.other.toString()+"'")},CPlugin}),angular.module("owsWalletPluginClient.api").factory("CSession",function($rootScope,$log,lodash,ApiMessage,CApplet,CError){function CSession(){function getSession(){var request={method:"GET",url:"/session/"+sessionId(),responseObj:{}};return new ApiMessage(request).send()}function sessionId(){var sessionId=window.location.search.substring(window.location.search.indexOf("sessionId=")+10);return sessionId.indexOf("&")>=0&&(sessionId=sessionId.substring(0,sessionId.indexOf("&"))),sessionId}var self=this;if(instance)return instance;instance=this;var state={statusCode:100,statusText:"Initializing"};return function(){new ApiMessage({method:"POST",url:START_URL,data:{}}).send().then(function(response){$log.info("[client] START: "+response.statusText+" ("+response.statusCode+")"),state={statusCode:response.statusCode,statusText:response.statusText},$rootScope.$emit("$pre.start",state)}).catch(function(error){$log.error("[client] START ERROR: "+error.message+" ("+error.statusCode+")"),state={statusCode:error.statusCode,statusText:error.message},$rootScope.$emit("$pre.start",state)}).then(function(){return getSession()}).then(function(sessionObj){lodash.assign(self,sessionObj),self.id||$log.error("[client] ERROR: unexpected response while retrieving session"),$rootScope.$emit("$pre.ready",self)})}(),this}var instance,START_URL="/start";return CSession.getInstance=function(){return instance||new CSession},CSession.prototype.flush=function(){return new ApiMessage({method:"POST",url:"/session/flush"}).send()},CSession.prototype.get=function(name){var self=this,request={method:"GET",url:"/session/"+this.id+"/var/"+name,responseObj:{}};return new ApiMessage(request).send().then(function(response){return"CError"!=typeof response&&(self[name]={},lodash.assign(self[name],response)),repsonse})},CSession.prototype.getApplet=function(){var self=this,request={method:"GET",url:"/session/"+this.id+"/applet",responseObj:CApplet};return new ApiMessage(request).send().then(function(response){return"CError"!=typeof response&&(self.applet={},lodash.assign(self.applet,response)),response})},CSession.prototype.restore=function(){var self=this,request={method:"POST",url:"/session/"+this.id+"/restore",data:{}};return new ApiMessage(request).send().then(function(response){return"CError"!=typeof response&&(self.data={},lodash.assign(self.data,response)),response})},CSession.prototype.set=function(name,value){var self=this,request={method:"POST",url:"/session/"+this.id+"/var/"+name,data:value};return new ApiMessage(request).send().then(function(response){return"CError"!=typeof response&&(self.data=self.data||{},lodash.merge(self.data,response)),response})},CSession}),angular.module("owsWalletPluginClient.api").factory("CSystem",function(){function CSystem(){throw new Error("CSystem is a static class")}function iterateObj(obj,stack){var properties=[];for(var property in obj)obj.hasOwnProperty(property)&&("object"==typeof obj[property]?(properties.push(stack+"."+property),properties=properties.concat(iterateObj(obj[property],stack+"."+property))):properties.push(stack+"."+property));return properties}return CSystem.checkObject=function(obj,requiredProperties){for(var properties=iterateObj(obj,""),missing=[],other=[],i=0;i<requiredProperties.length;i++)properties.indexOf(requiredProperties[i])<0&&missing.push(requiredProperties[i]);for(var i=0;i<properties.length;i++)requiredProperties.indexOf(properties[i])<0&&other.push(properties[i]);return{missing:missing,other:other}},CSystem}),angular.module("owsWalletPluginClient.api").factory("CUtils",function(rateService){function CUtils(){throw new Error("CUtils is a static class")}return CUtils.getRate=function(isoCode){return rateService.getRate(isoCode)},CUtils}),angular.module("owsWalletPluginClient.api").factory("CWallet",function(configService,txFormatService,FocusedWallet){function CWallet(){throw new Error("CWallet is a static class")}return CWallet.getCurrencyName=function(){return configService.getSync().wallet.settings.unitName},CWallet.getCurrencyCode=function(){return configService.getSync().wallet.settings.unitCode},CWallet.getAltCurrencyName=function(){return configService.getSync().wallet.settings.alternativeName},CWallet.getAltCurrencyIsoCode=function(){return configService.getSync().wallet.settings.alternativeIsoCode},CWallet.getUnitToSatoshi=function(){return configService.getSync().wallet.settings.unitToSatoshi},CWallet.getUnitDecimals=function(){return configService.getSync().wallet.settings.unitDecimals},CWallet.formatAmount=function(amount){return txFormatService.formatAmount(amount)},CWallet.sendPayment=function(data,callback){return FocusedWallet.getInstance().sendPayment(data,callback)},CWallet});