"use strict";var modules=["gettext","ngLodash","pathToRegexpModule","owsWalletPluginClient.api","owsWalletPluginClient.impl"],owsWalletPluginClient=angular.module("owsWalletPluginClient",modules);angular.module("owsWalletPluginClient.api",[]),angular.module("owsWalletPluginClient.impl",[]),angular.module("owsWalletPluginClient").config(function(){}).run(function($rootScope,$injector,lodash,apiHelpers,apiLog,ApiMessage,ApiRouter,CPlatform,CSession){function validateStartup(session){if(lodash.isEmpty(pluginKind)||!isApplet&&!isServlet)throw new Error("PLUGIN NOT VALID - the pluginKind <meta> in index.html is missing or invalid");if(session&&pluginKind!=session.plugin.header.kind)throw new Error("PLUGIN NOT VALID - the pluginKind <meta> in index.html does not match the configuration in plugin.json")}function setupForCordova(){isApplet&&(angular.element(document.querySelector("body")).addClass("platform-cordova"),angular.element(document.querySelector("ion-nav-view")).css("width",window.innerWidth+"px"))}var pluginKind=document.getElementsByName("ows-wallet-plugin-kind")[0].content,isApplet="applet"==pluginKind,isServlet="servlet"==pluginKind;validateStartup();var initializers={platformInfo:{fn:CPlatform.get,state:!1},session:{fn:CSession.getInstance,state:!1}};if(isApplet){var ionicConfig=$injector.get("$ionicConfig");ionicConfig.tabs.position("bottom"),ionicConfig.navBar.alignTitle("center"),ionicConfig.navBar.positionPrimaryButtons("left"),ionicConfig.navBar.positionSecondaryButtons("right"),ionicConfig.backButton.icon("icon ion-ios-arrow-left").text(""),ionicConfig.backButton.previousTitleText(!1),ionicConfig.scrolling.jsScrolling(!1)}(function(){var request={method:"POST",url:"/start",data:{sessionId:apiHelpers.sessionId()}};return new ApiMessage(request).send().then(function(response){apiLog.info("START: "+response.statusText+" ("+response.statusCode+")"),response.data.isCordova&&setupForCordova(),$rootScope.$emit("$pre.start")}).catch(function(error){apiLog.error("START ERROR: "+JSON.stringify(error))})})().then(function(){Object.keys(initializers).forEach(function(i){initializers[i].fn()})}),$rootScope.$on("Local/Initialized",function(event,what){initializers[what].state=!0,apiLog.debug(what+" initialized");var done=!0;if(lodash.forEach(Object.keys(initializers),function(i){done=done&&initializers[i].state}),done){var session=CSession.getInstance();apiHelpers.clientName(session.plugin.header.name),validateStartup(session);var request={method:"POST",url:"/ready",data:{sessionId:session.id}};return new ApiMessage(request).send().then(function(response){$rootScope.$emit("$pre.ready",session),apiLog.info("Open for business!")}).catch(function(error){apiLog.error("READY ERROR: (unexpected status) "+JSON.stringify(error))})}}),$rootScope.$on("Local/RoutesChanged",function(event,routes,target){var request={method:"POST",url:"/session/"+CSession.getInstance().id+"/routes",data:{routes:routes,target:target}};return new ApiMessage(request).send().then(function(response){}).catch(function(error){apiLog.error("ROUTES ERROR: "+JSON.stringify(error))})})}),angular.module("owsWalletPluginClient").run(["gettextCatalog",function(gettextCatalog){}]),angular.module("owsWalletPluginClient.impl").service("apiHelpers",function(){var clientName,root={};return root.sessionId=function(){var sessionId=window.location.search.substring(window.location.search.indexOf("sessionId=")+10);return sessionId.indexOf("&")>=0&&(sessionId=sessionId.substring(0,sessionId.indexOf("&"))),sessionId},root.clientName=function(name){return clientName=name||clientName||root.sessionId()},root}),angular.module("owsWalletPluginClient.impl").service("apiLog",function($log,apiHelpers){function doLog(level,message){var lead="["+apiHelpers.clientName()+"] ";switch(level){case"error":$log.error(lead+message);break;case"wanr":$log.warn(lead+message);break;case"info":$log.info(lead+message);break;default:$log.debug(lead+message)}}var root={};return root.debug=function(message){doLog("debug",message)},root.error=function(message){doLog("error",message)},root.info=function(message){doLog("info",message)},root.warn=function(message){doLog("warn",message)},root}),angular.module("owsWalletPluginClient.impl").factory("ApiMessage",function($rootScope,lodash,$injector,$timeout,apiHelpers,apiLog,ApiRouter,CError){function ApiMessage(eventOrRequest){function validatePOST(){lodash.isUndefined(self.request.data)&&(self.response={statusCode:400,statusText:"Invalid request, POST data not present in request.",data:{}})}var self=this;if(this.event={},eventOrRequest instanceof MessageEvent){this.event=event,function(){lodash.isUndefined(self.event.data)?self.response={statusCode:500,statusText:"Invalid message event, no 'data' found.",data:{}}:lodash.isString(self.event.data)||(self.response={statusCode:500,statusText:"Invalid message event data, expected string argument but received object.",data:{}})}();var data=JSON.parse(this.event.data);lodash.assign(this,data),isRequest(this)&&(function(){switch(lodash.isUndefined(self.request)?self.response={statusCode:400,statusText:"No request provided.",data:{}}:lodash.isUndefined(self.request.method)&&(self.response={statusCode:400,statusText:"No request method specified.",data:{}}),self.request.method){case"GET":break;case"POST":validatePOST()}}(),this.route=ApiRouter.routeRequest(this.request),function(){lodash.isUndefined(self.route)&&(self.response={statusCode:404,statusText:"Route not found.",data:{}})}())}else{var request=eventOrRequest;request.opts=request.opts||{},request.opts.timeout=request.opts.timeout||REQUEST_TIMEOUT;var now=new Date;this.header={sequence:sequence++,id:""+now.getTime(),timestamp:now,sessionId:apiHelpers.sessionId(),clientName:apiHelpers.clientName()},this.request=request||{},this.response={}}return this}function isRequest(message){return lodash.isEmpty(message.response)}function receiveMessage(event){var message;try{message=new ApiMessage(event),isRequest(message)?processRequestMessage(message):processResponseMessage(message)}catch(ex){apiLog.error("Invalid message received, "+ex.message+" - "+angular.toJson(event))}}function processResponseMessage(message){var promiseIndex=lodash.findIndex(promises,function(promise){return promise.id==message.header.id});if(promiseIndex>=0){var promise=lodash.pullAt(promises,promiseIndex);$timeout.cancel(promise[0].timer),promise[0].onComplete(message)}else message.send()}function processRequestMessage(message){$injector.get(message.route.handler).respond(message,function(message){message.send()})}function timeout(message){apiLog.debug("Plugin client request timeout: "+serialize(message));var promiseIndex=lodash.findIndex(promises,function(promise){return promise.id==message.header.id});if(promiseIndex>=0){var promise=lodash.pullAt(promises,promiseIndex);message.response={statusCode:408,statusText:"Request timed out.",data:{}},promise[0].onComplete(message)}else apiLog.warn("Message request timed out but there is no promise to fulfill: "+serialize(message))}function isStartMessage(message){return"/start"==message.request.url}function serialize(message){return angular.toJson(transport(message))}function transport(message){return{header:message.header,request:message.request,response:message.response}}var host=window.parent,REQUEST_TIMEOUT=3e3,messageServiceIsOK=!1,sequence=0,promises=[];return window.addEventListener("message",receiveMessage.bind(this)),$rootScope.$on("$pre.start",function(event){messageServiceIsOK=!0}),ApiMessage.prototype.send=function(){var self=this;return new Promise(function(resolve,reject){var onComplete=function(message){var responseObj;if(message.response.statusCode<200||message.response.statusCode>299)reject(new CError({code:message.response.statusCode,source:message.request.url,message:message.response.statusText,detail:""}));else{switch(message.response.statusCode){case 204:responseObj=void 0;break;default:lodash.isUndefined(message.request.responseObj)?responseObj=message.response:lodash.isEmpty(message.request.responseObj)?responseObj=message.response.data||{}:(responseObj=$injector.get(message.request.responseObj),responseObj=eval(new responseObj(message.response.data)))}resolve(responseObj)}};if(messageServiceIsOK||isStartMessage(self)){if(isRequest(self)){var timeoutTimer={};self.request.opts.timeout>0&&(timeoutTimer=$timeout(function(){timeout(self)},REQUEST_TIMEOUT)),promises.push({id:self.header.id,onComplete:onComplete,timer:timeoutTimer}),apiLog.info("REQUEST  "+self.header.sequence+": "+angular.toJson(transport(self)))}else apiLog.info("RESPONSE  "+self.header.sequence+": "+angular.toJson(transport(self)));host.postMessage(angular.toJson(transport(self)),"*")}else self.response={statusCode:503,statusText:"Client service not ready.",data:{}},onComplete(self)})},ApiMessage}),angular.module("owsWalletPluginClient.impl").factory("ApiRouter",function($rootScope,apiLog,lodash,pathToRegexpService){function ApiRouter(){throw new Error("ApiRouter is a static class")}function match(mapEntry,request,route){var keys=[],m=pathToRegexpService.pathToRegexp(mapEntry.path,keys).exec(request.url);if(!m)return!1;if(mapEntry.method!=request.method)return!1;route.params={},route.path=m[0],route.handler=mapEntry.handler;for(var i=1;i<m.length;i++){var key=keys[i-1],prop=key.name,val=decodeParam(m[i]);void 0===val&&hasOwnProperty.call(route.params,prop)||(route.params[prop]=val)}return request.params=route.params,!0}function decodeParam(val){if("string"!=typeof val||0===val.length)return val;try{return decodeURIComponent(val)}catch(err){throw err instanceof URIError&&(err.message="Failed to decode param '"+val+"'",err.status=err.statusCode=400),err}}var routeMap=[{path:"/ready",method:"POST",handler:"ready"}];return ApiRouter.addRoutes=function(session,routes){var targetId=session.plugin.uri;if(!targetId)return void apiLog.error("Cannot add routes, no target specified. Check plugin.json value for 'uri'.");var errors=!1,hostRoutes=lodash.map(routes,function(r){return r.path&&r.method&&r.handler||(apiLog.error("Invalid route: "+JSON.stringify(r)),errors=!0),{path:r.path,method:r.method,handler:r.handler}});return errors?void 0:(routeMap=routeMap.concat(routeMap,routes),void $rootScope.$emit("Local/RoutesChanged",hostRoutes,targetId))},ApiRouter.routeRequest=function(request){for(var route={},i=0;i<routeMap.length&&!match(routeMap[i],request,route);i++);return lodash.isEmpty(route)?void 0:route},ApiRouter}),angular.module("owsWalletPluginClient.api").factory("CApplet",function(lodash){function CApplet(appletObj){return lodash.assign(this,appletObj),this}return CApplet.prototype.hideSplash=function(){var request={method:"POST",url:"/applet/"+this.header.id+"/config",data:{showSplash:!1}};return new ApiMessage(request).send()},CApplet}),angular.module("owsWalletPluginClient.api").factory("CConst",function(){function CConst(){throw new Error("CConst is a static class")}return CConst.BITS_PER_BTC=1e6,CConst.SATOSHI_PER_BTC=1e8,CConst}),angular.module("owsWalletPluginClient.api").factory("CError",function(lodash){function CError(errorObj){return lodash.assign(this,errorObj),this}return CError}),angular.module("owsWalletPluginClient.api").factory("CHttp",function(apiLog,lodash,$http){function CHttp(config){return function(){if(Object.keys(lodash.pick(data,REQUIRED_CONFIG)).length!=REQUIRED_CONFIG.length)throw new Error("Missing required arguments for CHttp, you must include '"+REQUIRED_PARAMS.toString()+"'")}(),function(){if(!this.url.match(/^((http[s]?):\/)?\/?([^:\/\s]+)((\/\w+)*\/)([\w\-\.]+[^#?\s]+)(.*)?(#[\w\-]+)?$/g))throw new Error("Invalid URL for CHttp '"+this.url+"'");"/"!=this.url.slice(-1)&&(this.url+="/")}(),lodash.assign(this,config),this}var REQUIRED_CONFIG=["url"];return CHttp.prototype.guid=function(){return Date.now().toString()},CHttp.prototype.get=function(endpoint){return new Promise(function(resolve,reject){apilog.debug("GET "+encodeURI(this.url+endpoint));var getData={method:"GET",url:encodeURI(this.url+endpoint),headers:{"Content-Type":"application/json",Accept:"application/json"}};$http(getData).then(function(response){apiLog.debug("GET SUCCESS: "+endpoint),resolve(response)}).catch(function(error){apiLog.error("GET ERROR: "+endpoint+", "+error.statusText),reject(error.statusText)})})},CHttp.prototype.post=function(endpoint,data){return new Promise(function(resolve,reject){apiLog.debug("POST "+encodeURI(this.url+endpoint)+" data = "+JSON.stringify(data));var postData={method:"POST",url:encodeURI(this.url+endpoint),headers:{"Content-Type":"application/json",Accept:"application/json"},data:data};$http(postData).then(function(response){apiLog.deebug("POST SUCCESS: "+endpoint),resolve(response)}).catch(function(error){apiLog.error("POST ERROR: "+endpoint+", "+error.statusText),reject(error.statusText)})})},CHttp}),angular.module("owsWalletPluginClient.api").factory("CPlatform",function($rootScope,apiLog,lodash,ApiMessage){function CPlatform(){throw new Error("CPlatform is a static class")}return CPlatform.get=function(){return new ApiMessage({method:"GET",url:"/info/platform",responseObj:{}}).send().then(function(response){return lodash.assign(CPlatform,response),$rootScope.$emit("Local/Initialized","platformInfo"),response}).catch(function(error){apiLog.error("CPlatform.get(): "+JSON.stringify(error))})},CPlatform}),angular.module("owsWalletPluginClient.api").factory("CServlet",function(lodash){function CServlet(servletObj){return lodash.assign(this,servletObj),this}return CServlet}),angular.module("owsWalletPluginClient.api").factory("CSession",function($rootScope,lodash,apiHelpers,apiLog,ApiMessage,CApplet,CServlet,CError,CWallet){function CSession(){var self=this;return instance||(instance=this,function(){var request={method:"GET",url:"/session/"+apiHelpers.sessionId(),responseObj:{}};return new ApiMessage(request).send()}().then(function(sessionObj){switch(lodash.assign(self,sessionObj),self.plugin.header.kind){case"applet":self.plugin=new CApplet(self.plugin);break;case"servlet":self.plugin=new CServlet(self.plugin)}$rootScope.$emit("Local/Initialized","session")}).catch(function(error){apiLog.error("CSession(): "+JSON.stringify(error))}),this)}var instance;return CSession.getInstance=function(){return instance||new CSession},CSession.prototype.flush=function(){return new ApiMessage({method:"POST",url:"/session/flush",data:{}}).send().then(function(response){return repsonse}).catch(function(error){apiLog.error("CSession.flush():"+JSON.stringify(error))})},CSession.prototype.get=function(name){var self=this,request={method:"GET",url:"/session/"+this.id+"/var/"+name,responseObj:{}};return new ApiMessage(request).send().then(function(response){return self[name]={},lodash.assign(self[name],response),repsonse}).catch(function(error){apiLog.error("CSession.get(): "+JSON.stringify(error))})},CSession.prototype.restore=function(){var self=this,request={method:"POST",url:"/session/"+this.id+"/restore",data:{}};return new ApiMessage(request).send().then(function(response){return self.data={},lodash.assign(self.data,response),response}).catch(function(error){apiLog.error("CSession.restore(): "+JSON.stringify(error))})},CSession.prototype.set=function(name,value){var self=this,request={method:"POST",url:"/session/"+this.id+"/var/"+name,data:value};return new ApiMessage(request).send().then(function(response){return self.data=self.data||{},lodash.merge(self.data,response),response}).catch(function(error){apiLog.error("CSession.set(): "+JSON.stringify(error))})},CSession.prototype.chooseWallet=function(){var request={method:"GET",url:"/session/"+this.id+"/choosewallet",responseObj:"CWallet",opts:{timeout:-1}};return new ApiMessage(request).send().then(function(response){return response}).catch(function(error){apiLog.error("CSession.chooseWallet(): "+JSON.stringify(error))})},CSession}),angular.module("owsWalletPluginClient.api").factory("CSystem",function(){function CSystem(){throw new Error("CSystem is a static class")}function iterateObj(obj,stack){var properties=[];for(var property in obj)obj.hasOwnProperty(property)&&("object"==typeof obj[property]?(properties.push(stack+"."+property),properties=properties.concat(iterateObj(obj[property],stack+"."+property))):properties.push(stack+"."+property));return properties}return CSystem.checkObject=function(obj,requiredProperties){for(var properties=iterateObj(obj,""),missing=[],other=[],i=0;i<requiredProperties.length;i++)properties.indexOf(requiredProperties[i])<0&&missing.push(requiredProperties[i]);for(var i=0;i<properties.length;i++)requiredProperties.indexOf(properties[i])<0&&other.push(properties[i]);return{missing:missing,other:other}},CSystem}),angular.module("owsWalletPluginClient.api").factory("CUtils",function(rateService){function CUtils(){throw new Error("CUtils is a static class")}return CUtils.getRate=function(isoCode){return rateService.getRate(isoCode)},CUtils}),angular.module("owsWalletPluginClient.api").factory("CWallet",function(lodash){function CWallet(walletObj){lodash.assign(this,walletObj)}return CWallet});