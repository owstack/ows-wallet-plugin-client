"use strict";var owswallet={};!function(window,document,owswallet){function onWindowLoad(){self.isLoaded=!0,onPluginStart(),windowLoadListenderAttached&&window.removeEventListener("load",onWindowLoad,!1)}function onPluginStart(){window.addEventListener("plugin.ready",onPluginReady,!1),startCallback&&startCallback(),startCallback=void 0}function onPluginReady(){self.isReady=!0;for(var x=0;x<readyCallbacks.length;x++)readyCallbacks[x]();readyCallbacks=[]}var startCallback,windowLoadListenderAttached,platformName=null,readyCallbacks=[],openCallbacks=[],self=owswallet.Plugin={isLoaded:!1,isReady:!1,isOpen:{},start:function(cb){self.isLoaded?cb():startCallback=cb},ready:function(cb){self.isReady?cb():readyCallbacks.push(cb)},openForBusiness:function(pluginId,cb){self.isReady&&self.isOpen[pluginId]?cb():openCallbacks.push({pluginId:pluginId,callback:cb})},setOpen:function(pluginId){isOpen[pluginId]=!0;for(var indexes=[],x=0;x<openCallbacks.length;x++)openCallback[x]&&openCallbacks[x].pluginId==pluginId&&openCallbacks[x].callback(),run.push(x);for(var i=indexes.length-1;i>=0;i--)openCallbacks.splice(indexes[i],1)},platform:function(){return platformName},setPlatform:function(p){platform=p,p.isMobile.iOS?platformName="ios":p.isMobile.Android?platformName="android":p.isNodeWebkit&&(platformName="nodewebkit")},isIOS:function(){return self.platform.isMobile.iOS},isAndroid:function(){return self.platform.isMobile.Android},isCordova:function(){return self.platform.isCordova},isNodeWebKit:function(){return self.platform.isNodeWebkit},isSafari:function(){return self.platform.isSafari},isMobile:function(){return self.platform.isMobile},isIPhoneX:function(){return self.platform.isIPhoneX},userAgent:function(){return self.platform.userAgent}};"complete"===document.readyState?onWindowLoad():(windowLoadListenderAttached=!0,window.addEventListener("load",onWindowLoad,!1))}(window,document,owswallet);var modules=["gettext","ngLodash","pathToRegexpModule","owsWalletPluginClient.api","owsWalletPluginClient.impl","owsWalletPluginClient.services"],owsWalletPluginClient=angular.module("owsWalletPluginClient",modules);angular.module("owsWalletPluginClient.api",[]),angular.module("owsWalletPluginClient.impl",[]),angular.module("owsWalletPluginClient.services",[]),angular.module("owsWalletPluginClient").provider("$pluginConfig",function(lodash){function createConfig(configObj,providerObj){lodash.forEach(configObj,function(value){providerObj=function(newValue){return arguments.length?(configObj=newValue,providerObj):configObj}})}function setPlatformConfig(platformName,platformConfigs){configProperties.platform[platformName]=platformConfigs,provider.platform[platformName]={},addConfig(configProperties,configProperties.platform[platformName]),createConfig(configProperties.platform[platformName],provider.platform[platformName],"")}function addConfig(configObj,platformObj){for(var n in configObj)n!=PLATFORM&&configObj.hasOwnProperty(n)&&(angular.isObject(configObj[n])?(lodash.isUndefined(platformObj[n])&&(platformObj[n]={}),addConfig(configObj[n],platformObj[n])):lodash.isUndefined(platformObj[n])&&(platformObj[n]=null))}function createConfig(configObj,providerObj,platformPath){lodash.forEach(configObj,function(value,namespace){angular.isObject(configObj[namespace])?(providerObj[namespace]={},createConfig(configObj[namespace],providerObj[namespace],platformPath+"."+namespace)):providerObj[namespace]=function(newValue){if(arguments.length)return configObj[namespace]=newValue,providerObj;if(configObj[namespace]==PLATFORM){var platformConfig=stringObj(configProperties.platform,owswallet.Plugin.platform()+platformPath+"."+namespace);return platformConfig||!1===platformConfig?platformConfig:stringObj(configProperties.platform,"default"+platformPath+"."+namespace)}return configObj[namespace]}})}function stringObj(obj,str){str=str.split(".");for(var i=0;i<str.length;i++){if(!obj||lodash.isUndefined(obj[str[i]]))return null;obj=obj[str[i]]}return obj}var provider=this;provider.platform={};var PLATFORM="platform",configProperties={router:{routes:PLATFORM},platform:{}};createConfig(configProperties,provider,""),setPlatformConfig("default",{router:{routes:[]}}),setPlatformConfig("ios",{router:{routes:[]}}),setPlatformConfig("android",{router:{routes:[]}}),setPlatformConfig("nodewebkit",{router:{routes:[]}}),provider.setPlatformConfig=setPlatformConfig,provider.$get=function(){return provider}}),angular.module("owsWalletPluginClient").config(function(){}).run(function(launchService){}),angular.module("owsWalletPluginClient").run(["gettextCatalog",function(gettextCatalog){}]),angular.module("owsWalletPluginClient.api").factory("ApiError",function(lodash){function ApiError(errorObj){return lodash.assign(this,errorObj),this}return ApiError}),angular.module("owsWalletPluginClient.api").factory("Applet",function(lodash){function Applet(appletObj){return lodash.assign(this,appletObj),this}return Applet.prototype.hideSplash=function(){var request={method:"POST",url:"/applet/"+this.header.id+"/config",data:{showSplash:!1}};return new ApiMessage(request).send()},Applet}),angular.module("owsWalletPluginClient.api").factory("Contants",function(){function Contants(){throw new Error("Contants is a static class")}return Contants.BITS_PER_BTC=1e6,Contants.SATOSHI_PER_BTC=1e8,Contants}),angular.module("owsWalletPluginClient.api").factory("Http",function(pLog,lodash,$http,System){function Http(url,config){var self=this;return this.url=url.toLowerCase(),this.config=config,function(){if(!self.url.match(/(http:\/\/|https:\/\/)?[a-z0-9]+([\-\.]{1}[a-z0-9]+)*\.[a-z]{2,63}(:[0-9]{1,5})?(\/[a-z0-9\/]*)?/g))throw new Error("Invalid URL for Http() '"+self.url+"'");"/"!=self.url.slice(-1)&&(self.url+="/")}(),this}return Http.guid=function(){return Date.now().toString()},Http.prototype.get=function(endpoint){var self=this;return new Promise(function(resolve,reject){var url=encodeURI(self.url+endpoint);plog.debug("GET "+url),$http.get(data,self.config).then(function(response){pLog.debug("GET SUCCESS: "+JSON.stringify(response)),resolve(response)}).catch(function(error){pLog.error("GET ERROR: "+url+", "+error.statusText),reject(error.statusText)})})},Http.prototype.post=function(endpoint,data){var self=this;return new Promise(function(resolve,reject){var url=encodeURI(self.url+endpoint);pLog.debug("POST "+url+" data = "+JSON.stringify(data)),$http.post(url,data,self.config).then(function(response){pLog.debug("POST SUCCESS: "+url+" "+JSON.stringify(response)),resolve(response)}).catch(function(error){pLog.error("POST ERROR: "+url+", "+error.statusText),reject(error.statusText)})})},Http}),angular.module("owsWalletPluginClient.api").factory("Servlet",function(lodash){function Servlet(servletObj){return lodash.assign(this,servletObj),this}return Servlet}),angular.module("owsWalletPluginClient.api").factory("Session",function($rootScope,lodash,apiHelpers,pLog,ApiMessage,Applet,Servlet,Wallet){function Session(){var self=this;return instance||(instance=this,function(){var request={method:"GET",url:"/session/"+apiHelpers.sessionId(),responseObj:{}};return new ApiMessage(request).send()}().then(function(sessionObj){switch(lodash.assign(self,sessionObj),self.plugin.header.kind){case"applet":self.plugin=new Applet(self.plugin);break;case"servlet":self.plugin=new Servlet(self.plugin)}$rootScope.$emit("Local/Initialized","session")}).catch(function(error){pLog.error("Session(): "+JSON.stringify(error))}),this)}var instance;return Session.getInstance=function(){return instance||new Session},Session.prototype.flush=function(){return new ApiMessage({method:"POST",url:"/session/flush",data:{}}).send().then(function(response){return repsonse}).catch(function(error){pLog.error("Session.flush():"+JSON.stringify(error))})},Session.prototype.get=function(name){var self=this,request={method:"GET",url:"/session/"+this.id+"/var/"+name,responseObj:{}};return new ApiMessage(request).send().then(function(response){return self[name]={},lodash.assign(self[name],response),repsonse}).catch(function(error){pLog.error("Session.get(): "+JSON.stringify(error))})},Session.prototype.restore=function(){var self=this,request={method:"POST",url:"/session/"+this.id+"/restore",data:{}};return new ApiMessage(request).send().then(function(response){return self.data={},lodash.assign(self.data,response),response}).catch(function(error){pLog.error("Session.restore(): "+JSON.stringify(error))})},Session.prototype.set=function(name,value){var self=this,request={method:"POST",url:"/session/"+this.id+"/var/"+name,data:value};return new ApiMessage(request).send().then(function(response){return self.data=self.data||{},lodash.merge(self.data,response),response}).catch(function(error){pLog.error("Session.set(): "+JSON.stringify(error))})},Session.prototype.chooseWallet=function(){var request={method:"GET",url:"/session/"+this.id+"/choosewallet",responseObj:"Wallet",opts:{timeout:-1}};return new ApiMessage(request).send().then(function(response){return response}).catch(function(error){pLog.error("Session.chooseWallet(): "+JSON.stringify(error))})},Session}),angular.module("owsWalletPluginClient.api").factory("System",function(lodash){function System(){throw new Error("System is a static class")}return System.checkRequired=function(required,obj){var missing=[];return lodash.forEach(required,function(param){void 0==lodash.get(obj,param,void 0)&&missing.push(param)}),missing},System}),angular.module("owsWalletPluginClient.api").factory("Utils",function(rateService){function Utils(){throw new Error("Utils is a static class")}return Utils.getRate=function(isoCode){return rateService.getRate(isoCode)},Utils}),angular.module("owsWalletPluginClient.api").factory("Wallet",function(lodash){function Wallet(walletObj){lodash.assign(this,walletObj)}return Wallet}),angular.module("owsWalletPluginClient.impl").service("apiHelpers",function(){var clientName,root={};return root.sessionId=function(){var sessionId=window.location.search.substring(window.location.search.indexOf("sessionId=")+10);return sessionId.indexOf("&")>=0&&(sessionId=sessionId.substring(0,sessionId.indexOf("&"))),sessionId},root.clientName=function(name){return clientName=name||clientName||root.sessionId()},root}),angular.module("owsWalletPluginClient.impl").factory("ApiMessage",function($rootScope,lodash,$injector,$timeout,apiHelpers,pLog,ApiRouter,ApiError){function ApiMessage(eventOrRequest){function validatePOST(){lodash.isUndefined(self.request.data)&&(self.response={statusCode:400,statusText:"Invalid request, POST data not present in request.",data:{}})}var self=this;if(this.event={},eventOrRequest instanceof MessageEvent){this.event=event,function(){lodash.isUndefined(self.event.data)?self.response={statusCode:500,statusText:"Invalid message event, no 'data' found.",data:{}}:lodash.isString(self.event.data)||(self.response={statusCode:500,statusText:"Invalid message event data, expected string argument but received object.",data:{}})}();var data=JSON.parse(this.event.data);lodash.assign(this,data),isRequest(this)&&(function(){switch(lodash.isUndefined(self.request)?self.response={statusCode:400,statusText:"No request provided.",data:{}}:lodash.isUndefined(self.request.method)&&(self.response={statusCode:400,statusText:"No request method specified.",data:{}}),self.request.method){case"GET":break;case"POST":validatePOST()}}(),this.route=ApiRouter.routeRequest(this.request),function(){lodash.isUndefined(self.route)&&(self.response={statusCode:404,statusText:"Route not found.",data:{}})}())}else{var request=eventOrRequest;request.opts=request.opts||{},request.opts.timeout=request.opts.timeout||REQUEST_TIMEOUT;var now=new Date;this.header={sequence:sequence++,id:""+now.getTime(),timestamp:now,sessionId:apiHelpers.sessionId(),clientName:apiHelpers.clientName()},this.request=request||{},this.response={}}return this}function isRequest(message){return lodash.isEmpty(message.response)}function receiveMessage(event){var message;try{message=new ApiMessage(event),isRequest(message)?processRequestMessage(message):processResponseMessage(message)}catch(ex){pLog.error("Could not process message, "+ex.message+" - "+angular.toJson(event))}}function processResponseMessage(message){var promiseIndex=lodash.findIndex(promises,function(promise){return promise.id==message.header.id});if(promiseIndex>=0){var promise=lodash.pullAt(promises,promiseIndex);$timeout.cancel(promise[0].timer),promise[0].onComplete(message)}else message.send()}function processRequestMessage(message){$injector.get(message.route.handler).respond(message,function(message){message.send()})}function timeout(message){pLog.debug("Plugin client request timeout: "+serialize(message));var promiseIndex=lodash.findIndex(promises,function(promise){return promise.id==message.header.id});if(promiseIndex>=0){var promise=lodash.pullAt(promises,promiseIndex);message.response={statusCode:408,statusText:"Request timed out.",data:{}},promise[0].onComplete(message)}else pLog.warn("Message request timed out but there is no promise to fulfill: "+serialize(message))}function isStartMessage(message){return"/start"==message.request.url}function serialize(message){return angular.toJson(transport(message))}function transport(message){return{header:message.header,request:message.request,response:message.response}}var host=window.parent,REQUEST_TIMEOUT=3e3,ready=!1,sequence=0,promises=[];return window.addEventListener("message",receiveMessage.bind(this)),ApiMessage.ready=function(){ready=!0},ApiMessage.prototype.send=function(){var self=this;return new Promise(function(resolve,reject){var onComplete=function(message){var responseObj;if(message.response.statusCode<200||message.response.statusCode>299)reject(new ApiError({code:message.response.statusCode,source:message.request.url,message:message.response.statusText,detail:""}));else{switch(message.response.statusCode){case 204:responseObj=void 0;break;default:lodash.isUndefined(message.request.responseObj)?responseObj=message.response:lodash.isEmpty(message.request.responseObj)?responseObj=message.response.data||{}:(responseObj=$injector.get(message.request.responseObj),responseObj=eval(new responseObj(message.response.data)))}resolve(responseObj)}};if(ready||isStartMessage(self)){if(isRequest(self)){var timeoutTimer={};self.request.opts.timeout>0&&(timeoutTimer=$timeout(function(){timeout(self)},REQUEST_TIMEOUT)),promises.push({id:self.header.id,onComplete:onComplete,timer:timeoutTimer}),pLog.info("REQUEST  "+self.header.sequence+": "+angular.toJson(transport(self)))}else pLog.info("RESPONSE  "+self.header.sequence+": "+angular.toJson(transport(self)));host.postMessage(angular.toJson(transport(self)),"*")}else self.response={statusCode:503,statusText:"Client service not ready.",data:{}},onComplete(self)})},ApiMessage}),angular.module("owsWalletPluginClient.impl").factory("ApiRouter",function($rootScope,$pluginConfig,pLog,lodash,pathToRegexpService){function ApiRouter(){throw new Error("ApiRouter is a static class")}function match(mapEntry,request,route){var keys=[],m=pathToRegexpService.pathToRegexp(mapEntry.path,keys).exec(request.url);if(!m)return!1;if(mapEntry.method!=request.method)return!1;route.params={},route.path=m[0],route.handler=mapEntry.handler;for(var i=1;i<m.length;i++){var key=keys[i-1],prop=key.name,val=decodeParam(m[i]);void 0===val&&hasOwnProperty.call(route.params,prop)||(route.params[prop]=val)}return request.params=route.params,!0}function decodeParam(val){if("string"!=typeof val||0===val.length)return val;try{return decodeURIComponent(val)}catch(err){throw err instanceof URIError&&(err.message="Failed to decode param '"+val+"'",err.status=err.statusCode=400),err}}var routeMap=[{path:"/ready",method:"POST",handler:"ready"}];return ApiRouter.applyRoutes=function(session){var routes=$pluginConfig.router.routes(),targetId=session.plugin.uri;if(!targetId)return void pLog.error("Cannot add routes, no target specified. Check plugin.json value for 'uri'.");var errors=!1,hostRoutes=lodash.map(routes,function(r){return r.path&&r.method&&r.handler||(pLog.error("Invalid route: "+JSON.stringify(r)),errors=!0),{path:r.path,method:r.method,handler:r.handler}});return errors?void 0:(routeMap=routeMap.concat(routeMap,routes),void $rootScope.$emit("Local/RoutesChanged",hostRoutes,targetId))},ApiRouter.routeRequest=function(request){for(var route={},i=0;i<routeMap.length&&!match(routeMap[i],request,route);i++);return lodash.isEmpty(route)?void 0:route},ApiRouter}),angular.module("owsWalletPluginClient.services").service("launchService",function($rootScope,$injector,lodash,apiHelpers,pLog,ApiMessage,ApiRouter,Session){owswallet.Plugin.start(function(){function validateStartup(session){if(lodash.isEmpty(pluginKind)||!isApplet&&!isServlet)throw new Error("PLUGIN NOT VALID - the pluginKind <meta> in index.html is missing or invalid");if(session&&pluginKind!=session.plugin.header.kind)throw new Error("PLUGIN NOT VALID - the pluginKind <meta> in index.html does not match the configuration in plugin.json")}function setupForCordova(){isApplet&&(angular.element(document.querySelector("body")).addClass("platform-cordova"),angular.element(document.querySelector("ion-nav-view")).css("width",window.innerWidth+"px"))}function getPlatformInfo(){return new ApiMessage({method:"GET",url:"/info/platform",responseObj:{}}).send().then(function(response){owswallet.Plugin.setPlatform(response),$rootScope.$emit("Local/Initialized","platformInfo")}).catch(function(error){pLog.error("getPlatform(): "+JSON.stringify(error))})}var pluginKind=document.getElementsByName("ows-wallet-plugin-kind")[0].content,isApplet="applet"==pluginKind,isServlet="servlet"==pluginKind;validateStartup();var initializers={platformInfo:{fn:getPlatformInfo,done:!1},session:{fn:Session.getInstance,done:!1}};if(isApplet){var ionicConfig=$injector.get("$ionicConfig");ionicConfig.tabs.position("bottom"),ionicConfig.navBar.alignTitle("center"),ionicConfig.navBar.positionPrimaryButtons("left"),ionicConfig.navBar.positionSecondaryButtons("right"),ionicConfig.backButton.icon("icon ion-ios-arrow-left").text(""),ionicConfig.backButton.previousTitleText(!1),ionicConfig.scrolling.jsScrolling(!1)}(function(){var request={method:"POST",url:"/start",data:{sessionId:apiHelpers.sessionId()}};return new ApiMessage(request).send().then(function(response){pLog.info("START: "+response.statusText+" ("+response.statusCode+")"),response.data.isCordova&&setupForCordova(),ApiMessage.ready()}).catch(function(error){pLog.error("START ERROR: "+JSON.stringify(error))})})().then(function(){Object.keys(initializers).forEach(function(i){initializers[i].fn()})}),$rootScope.$on("Local/Initialized",function(event,what){initializers[what].state=!0,pLog.debug(what+" initialized");var done=!0;if(lodash.forEach(Object.keys(initializers),function(i){done=done&&initializers[i].state}),done){var session=Session.getInstance();apiHelpers.clientName(session.plugin.header.name),validateStartup(session),ApiRouter.applyRoutes(session);var request={method:"POST",url:"/ready",data:{sessionId:session.id}};return new ApiMessage(request).send().then(function(response){var event=new Event("plugin.ready");window.dispatchEvent(event),pLog.info("Open for business!")}).catch(function(error){pLog.error("READY ERROR: (unexpected status) "+JSON.stringify(error))})}}),$rootScope.$on("Local/RoutesChanged",function(event,routes,target){var request={method:"POST",url:"/session/"+Session.getInstance().id+"/routes",data:{routes:routes,target:target}};return new ApiMessage(request).send().then(function(response){}).catch(function(error){pLog.error("ROUTES ERROR: "+JSON.stringify(error))})})})}),angular.module("owsWalletPluginClient.services").service("pLog",function($log,apiHelpers){function doLog(level,message){var lead="["+apiHelpers.clientName()+"] ";switch(level){case"error":$log.error(lead+message);break;case"wanr":$log.warn(lead+message);break;case"info":$log.info(lead+message);break;default:$log.debug(lead+message)}}var root={};return root.debug=function(message){doLog("debug",message)},root.error=function(message){doLog("error",message)},root.info=function(message){doLog("info",message)},root.warn=function(message){doLog("warn",message)},root});